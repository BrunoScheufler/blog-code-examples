import { Options as PackagerOptions } from "electron-packager";
import path from "path";

// Load package json
const pkg = require("../package.json");

const packagerConfig: Omit<
  PackagerOptions,
  "dir" | "arch" | "platform" | "out" | "electronVersion"
> = {
  // App Details
  name: "Electron macOS starter",
  appBundleId: "com.brunoscheufler.electron-macos-starter",
  appCategoryType: "public.app-category.productivity",
  appCopyright: "Copyright Â© 2020 Bruno Scheufler. All rights reserved.",
  appVersion: pkg.version,
  buildVersion: "1",

  // Use icon set generated by running icons.sh
  icon: path.resolve("build/icon.icns"),

  // Only package files necessary to run the application
  ignore: (file) => {
    // Only ignore files when we've got a file path
    if (!file) {
      return false;
    }

    // Allow files required to run
    const allowedFiles = [
      "/package.json",
      "/yarn.lock",
      "/entitlements.plist",
      "/build",
      "/node_modules",
    ];

    return allowedFiles.every((f) => !file.startsWith(f));
  },

  darwinDarkModeSupport: true,

  // Sign for distribution outside of Mac App Store
  osxSign: {
    hardenedRuntime: true,
    identity: process.env.APPLE_CODE_SIGN_IDENTITY,
    type: "distribution",
    entitlements: path.resolve("entitlements.plist"),
    "entitlements-inherit": path.resolve("entitlements.plist"),
    "gatekeeper-assess": false,
  },

  // Notarize after signing
  osxNotarize: {
    // As Access Keys aren't supported right now, we need to
    // use the Apple ID authentication method
    appleId: process.env.APPLE_ID as string,
    appleIdPassword: process.env.APPLE_ID_PASSWORD as string,
  },
};

const config = {
  packagerConfig,
  makers: [
    // Only build .app for macOS
    {
      name: "@electron-forge/maker-zip",
      platforms: ["darwin"],
    },
  ],
};

module.exports = config;
